/**
 * Provides the block_todo/control module
 *
 * @category    output
 * @copyright   2018 David Mudr√°k <david@moodle.com>
 * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("block_todo/control",["jquery","core/log","core/ajax","core/templates","core/str","core/modal_factory","core/modal_events"],(function($,Log,Ajax,Templates,Str,ModalFactory,ModalEvents){function TodoControl(region){this.region=region}function dateToTimestamp(date){return Date.parse(date)/1e3}return TodoControl.prototype.main=function(){this.addForm=this.region.find('[data-control="addform"]').first(),this.addTextInput=this.addForm.find(".block_todo_text"),this.addDueDateInput=this.addForm.find(".block_todo_duedate"),this.addSubmitButton=this.addForm.find(".block_todo_submit"),this.itemsList=this.region.find(".list-wrapper"),this.initAddFeatures(),this.initEditFeatures()},TodoControl.prototype.initAddFeatures=function(){var self=this;self.addForm.on("submit",(function(e){e.preventDefault(),self.addNewTodo()})),self.addSubmitButton.on("click",(function(){self.addForm.submit()}))},TodoControl.prototype.initEditFeatures=function(){var self=this;self.itemsList.on("click",'[data-control="toggle"]',(function(e){var id=$(e.currentTarget).parent().attr("data-item");self.toggleItem(id)})),self.itemsList.on("click",'[data-control="delete"]',(function(e){var id=$(e.currentTarget).parent().attr("data-id"),text=$(e.currentTarget).parent().attr("data-text");self.deleteItem(e,id,text)})),self.itemsList.on("click",'[data-control="edit"]',(function(e){var id=$(e.currentTarget).parent().attr("data-id"),text=$(e.currentTarget).parent().attr("data-text"),duedate=$(e.currentTarget).parent().attr("data-duedate");self.editItem(e,id,text,duedate)}))},TodoControl.prototype.addNewTodo=function(){var self=this,todoText=$.trim(self.addTextInput.val()),duedate=null;return self.addDueDateInput.val()&&(duedate=dateToTimestamp(self.addDueDateInput.val())),todoText?(self.addTextInput.prop("disabled",!0),Ajax.call([{methodname:"block_todo_add_item",args:{todotext:todoText,duedate:duedate}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to add the item"),Log.debug(reason),self.addSubmitButton.addClass("btn-danger"),self.addSubmitButton.html('<i class="fa fa-exclamation-circle" aria-hidden="true"></i>'),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/item",response).fail((function(reason){Log.error("block_todo/control: unable to render the new item:"+reason)}))})).then((function(item){return function(list,duedate,item){var formattedDate="";duedate?(options={weekday:"short",month:"short",day:"numeric"},formattedDate=new Date(1e3*duedate).toLocaleDateString("en-au",options)):(formattedDate="General",duedate="");var options;var attribute='[data-duedategroup="'+duedate+'"]';if(list.itemsList.find(attribute).length)list.itemsList.find(attribute).find(".list-group").prepend(item);else{var html="";html+='<div data-duedategroup="'+duedate+'">',html+='<h5 class="mt-3 h6">'+formattedDate+"</h5>",html+='<ul class="list-group unstyled">',html+=item,html+="</ul>",html+="</div>",list.itemsList.prepend(html)}}(self,duedate,item),self.addTextInput.val(""),self.addTextInput.prop("disabled",!1),self.addTextInput.focus(),$.Deferred().resolve()}))):Str.get_string("placeholdermore","block_todo").then((function(text){return self.addTextInput.prop("placeholder",text),$.Deferred().resolve()}))},TodoControl.prototype.toggleItem=function(id){if(!id)return $.Deferred().resolve();var self=this;return Ajax.call([{methodname:"block_todo_toggle_item",args:{id:id}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to toggle the item"),Log.debug(reason),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/item",response).fail((function(reason){Log.error("block_todo/control: unable to render the new item:"+reason)}))})).then((function(item){return self.itemsList.find('[data-item="'+id+'"]').replaceWith(item),$.Deferred().resolve()}))},TodoControl.prototype.editItem=function(e,id,text,duedate){if(!id)return $.Deferred().resolve();var self=this,trigger=$(e.currentTarget);const args={id:id,text:text};return duedate&&(args.duedate=function(timestamp){const date=new Date(1e3*timestamp),datevalues=[date.getFullYear(),("0"+date.getMonth()+1).slice(-2),("0"+date.getDate()).slice(-2)];return datevalues[0]+"-"+datevalues[1]+"-"+datevalues[2]}(duedate)),ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL,title:"Edit item",body:Templates.render("block_todo/edit",args)},trigger).done((function(modal){modal.getRoot().on(ModalEvents.save,(function(){var modalBody=modal.getBody(),newText=$.trim(modalBody.find(".block_todo_edit_text").val()),newDuedate=dateToTimestamp(modalBody.find(".block_todo_edit_duedate").val());return Ajax.call([{methodname:"block_todo_edit_item",args:{id:id,todotext:newText,duedate:newDuedate}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to edit the item"),Log.debug(reason),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/item",response).fail((function(reason){Log.error("block_todo/control: unable to render the new item:"+reason)}))})).then((function(item){return self.itemsList.find('[data-item="'+id+'"]').replaceWith(item),$.Deferred().resolve()}))})),modal.getRoot().on(ModalEvents.hidden,(function(){modal.destroy()})),modal.show()})),$.Deferred().resolve()},TodoControl.prototype.deleteItem=function(e,id,text){var self=this,trigger=$(e.currentTarget);return id?(ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL,title:"Delete item",body:"Are you sure you want to delete <strong>"+text+"</strong>?"},trigger).done((function(modal){modal.setSaveButtonText("Confirm"),modal.getRoot().on(ModalEvents.save,(function(){return Ajax.call([{methodname:"block_todo_delete_item",args:{id:id}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to delete the item"),Log.debug(reason),$.Deferred().reject()})).then((function(deletedid){return self.itemsList.find('[data-item="'+deletedid+'"]').remove(),$.Deferred().resolve()}))})),modal.getRoot().on(ModalEvents.hidden,(function(){modal.destroy()})),modal.show()})),$.Deferred().resolve()):$.Deferred().resolve()},{init:function(instanceid){Log.debug("block_todo/control: initializing controls of the todo block instance "+instanceid);var region=$('[data-region="block_todo-instance-'+instanceid+'"]').first();region.length?new TodoControl(region).main():Log.error("block_todo/control: wrapping region not found!")}}}));

//# sourceMappingURL=control.min.js.map